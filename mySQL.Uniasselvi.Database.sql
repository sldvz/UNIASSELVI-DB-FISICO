-- MySQL Script generated by MySQL Workbench
-- Thu Jul  3 18:13:55 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Categoria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`Subcategoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Subcategoria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `id_categoria` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX (`id_categoria` ASC) VISIBLE,
  CONSTRAINT `fk_Subcategoria_Categoria`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `mydb`.`Categoria` (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`Produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Produto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NOT NULL,
  `descricao` TEXT NULL DEFAULT NULL,
  `preco` DECIMAL(10,2) NOT NULL,
  `estoque` INT NOT NULL,
  `id_subcategoria` INT NOT NULL,
  `id_rfid` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX (`id_rfid` ASC) VISIBLE,
  INDEX (`id_subcategoria` ASC) VISIBLE,
  CONSTRAINT `fk_Produto_Subcategoria`
    FOREIGN KEY (`id_subcategoria`)
    REFERENCES `mydb`.`Subcategoria` (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`RFID`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`RFID` (
  `id` VARCHAR(50) NOT NULL,
  `id_produto` INT NOT NULL,
  `data_registro` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `status` ENUM('ativo', 'inativo') NULL DEFAULT 'ativo',
  `ultima_leitura` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`id_produto` ASC) VISIBLE,
  CONSTRAINT `fk_RFID_Produto`
    FOREIGN KEY (`id_produto`)
    REFERENCES `mydb`.`Produto` (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`Endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Endereco` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NOT NULL,
  `tipo` VARCHAR(50) NULL DEFAULT NULL,
  `cidade` VARCHAR(100) NOT NULL,
  `cep` VARCHAR(10) NULL DEFAULT NULL,
  `linha_endereco1` VARCHAR(100) NOT NULL,
  `linha_endereco2` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_Endereco_Cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `mydb`.`Cliente` (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `telefone` VARCHAR(20) NULL DEFAULT NULL,
  `id_endereco_padrao` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX (`email` ASC) VISIBLE,
  INDEX (`id_endereco_padrao` ASC) VISIBLE,
  CONSTRAINT `fk_Cliente_Endereco`
    FOREIGN KEY (`id_endereco_padrao`)
    REFERENCES `mydb`.`Endereco` (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`Venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Venda` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NOT NULL,
  `data_hora` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `status_pagamento` ENUM('pendente', 'concluido', 'cancelado') NULL DEFAULT 'pendente',
  PRIMARY KEY (`id`),
  INDEX (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_Venda_Cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `mydb`.`Cliente` (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`ItemVenda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ItemVenda` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_venda` INT NOT NULL,
  `id_produto` INT NOT NULL,
  `quantidade` INT NOT NULL,
  `id_rfid` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`id_venda` ASC) VISIBLE,
  INDEX (`id_produto` ASC) VISIBLE,
  INDEX (`id_rfid` ASC) VISIBLE,
  CONSTRAINT `fk_ItemVenda_Venda`
    FOREIGN KEY (`id_venda`)
    REFERENCES `mydb`.`Venda` (`id`),
  CONSTRAINT `fk_ItemVenda_Produto`
    FOREIGN KEY (`id_produto`)
    REFERENCES `mydb`.`Produto` (`id`),
  CONSTRAINT `fk_ItemVenda_RFID`
    FOREIGN KEY (`id_rfid`)
    REFERENCES `mydb`.`RFID` (`id`));


-- -----------------------------------------------------
-- Table `mydb`.`HistoricoStatusVenda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`HistoricoStatusVenda` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_venda` INT NOT NULL,
  `mudanca_status` ENUM('pendente', 'concluido', 'cancelado') NOT NULL,
  `data_hora` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX (`id_venda` ASC) VISIBLE,
  CONSTRAINT `fk_HistoricoStatusVenda_Venda`
    FOREIGN KEY (`id_venda`)
    REFERENCES `mydb`.`Venda` (`id`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
